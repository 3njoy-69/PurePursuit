import numpy as np
import matplotlib.pyplot as plt
import socket
from hybridAStar_v4 import run
from hybridAStar_v4 import calculateMapParameters
from hybridAStar_v4 import map
from combine_PurePursuit import control

# Init chÆ°á»›ng ngáº¡i váº­t vÃ  map
obstacleX, obstacleY = map()
mapParameters = calculateMapParameters(obstacleX, obstacleY, 4, np.deg2rad(15.0))

# Set Ä‘iá»ƒm xuáº¥t phÃ¡t (dÃ¹ng detect camera á»Ÿ Ä‘Ã¢y)
s = [160, 150, np.deg2rad(0)]

# Táº¡o socket Ä‘á»ƒ nháº­n dá»¯ liá»‡u tá»« Qt (trÃªn cá»•ng 12347)
udp_receiver = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
udp_receiver.bind(("127.0.0.1", 12347))
print("Python Ä‘ang láº¯ng nghe trÃªn cá»•ng 12347 Ä‘á»ƒ nháº­n dá»¯ liá»‡u tá»« Qt...")

# Táº¡o socket riÃªng Ä‘á»ƒ gá»­i tÃ­n hiá»‡u Ä‘áº¿n Qt (trÃªn cá»•ng 12346)
udp_sender = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
qt_address = ("127.0.0.1", 12346)

# Gá»­i tÃ­n hiá»‡u ban Ä‘áº§u Ä‘áº¿n Qt
udp_sender.sendto("Start".encode(), qt_address)

def main():
    # while True:
    #     data, addr = udp_receiver.recvfrom(1024)
    #     message2 = data.decode()
    #     print(f"Nháº­n tá»« {addr}: {message2}")
    #     if message2 == "1":
    #         print("ðŸš— Báº­t cháº¿ Ä‘á»™ Ä‘á»— xe tá»± Ä‘á»™ng!")
    #         g = [250, 200, np.deg2rad(90)]
    #         run(s, g, mapParameters, plt)
    #         control()
    #         udp_sender.sendto("Done".encode(), qt_address)
    #         break
    #
    #     elif message2 == "2":
    #         print("ðŸš— Báº­t cháº¿ Ä‘á»™ Ä‘á»— xe tá»± Ä‘á»™ng!")
    #         g = [250, 150, np.deg2rad(0)]
    #         run(s, g, mapParameters, plt)
    #         control()
    #         udp_sender.sendto("Done".encode(), qt_address)
    #         break
    #
    #     elif message2 == "3":
    #         print("ðŸš— Báº­t cháº¿ Ä‘á»™ Ä‘á»— xe tá»± Ä‘á»™ng!")
    #         g = [250, 100, np.deg2rad(-90)]
    #         run(s, g, mapParameters, plt)
    #         control()
    #         udp_sender.sendto("Done".encode(), qt_address)
    #         break
    #
    #     elif message2 == "No":
    #         print("â›” KhÃ´ng kÃ­ch hoáº¡t cháº¿ Ä‘á»™ Ä‘á»— xe tá»± Ä‘á»™ng!")
    #         break

    g = [250, 90, np.deg2rad(90)]
    run(s, g, mapParameters, plt)
    control()

if __name__ == "__main__":
    main()



